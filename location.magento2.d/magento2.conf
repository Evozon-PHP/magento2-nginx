# Main entry point
location / {
  # Workaround - Nginx does not allow `XOR` or nested `IF` statements
  set $maintenance "";
  # Maintenance flag is a file: `/magento-path/var/.maintenance.flag`
  if (-f $MAGE_ROOT/var/.maintenance.flag) {
    set $maintenance F; # F = flag
  }
  # Remote Addr access
  # @see conf.magento2.d/maintenance.conf
  if ($maintenance_allowed = 0) {
    set $maintenance "${maintenance}A"; # A = address
  }
  # If both maintenance flag and remote addr (IP) match,
  # we will return a 503.
  if ($maintenance = FA) {
    return 503;
  }

  # serve from disk or forward to `index.php`
  try_files $uri $uri/ /index.php$is_args$args;
}

# Magento2 php files
location ~ (index|get|static|report|404|503)\.php$ {
  try_files $uri =404;

  fastcgi_pass        magento2_phpfpm; # @see conf.d/upstream-magento2.conf
  fastcgi_index       index.php;
  include             fastcgi.conf;

  fastcgi_keep_conn        on;
  fastcgi_connect_timeout  65;
	fastcgi_send_timeout     7200;
	fastcgi_read_timeout     7200;

  # Set mage mode
  fastcgi_param MAGE_MODE $MAGE_MODE;

  # Multi-store configuration
  # @see conf.magento2.d/multistore.conf
  #fastcgi_param	MAGE_RUN_CODE $MAGE_RUN_CODE;
  #fastcgi_param	MAGE_RUN_TYPE $MAGE_RUN_TYPE;
}

# Block other undefined php files,
# possible injections and random malware hooks.
#
# In case you need more executable php files,
# whitelist them in the above location.
location ~* \.php$ { return 404; }
